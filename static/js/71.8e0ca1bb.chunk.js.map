{"version":3,"file":"static/js/71.8e0ca1bb.chunk.js","mappings":"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","sources":["assets/images/arrow.svg","webpack://breaking/./src/components/atoms/BackToCatalog/style.module.scss?e6ff","components/atoms/BackToCatalog/index.js","webpack://breaking/./src/components/organismes/PersonInfo/style.module.scss?2a35","webpack://breaking/./src/components/molecules/BigCard/style.module.scss?24ab","components/molecules/BigCard/index.js","components/organismes/PersonInfo/component.js","components/organismes/PersonInfo/container.js","webpack://breaking/./src/components/pages/PersonPage/style.module.scss?a86b","components/pages/PersonPage/index.js","repository/connector.js","repository/PersonsActions/index.js","repository/index.js","store/actions/persons.js"],"sourcesContent":["var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgArrow(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 18,\n    height: 18,\n    viewBox: \"0 0 18 18\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M10 1L2 9M2 9L10 17M2 9H18\",\n    stroke: \"#FFD930\",\n    strokeWidth: 2\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgArrow);\nexport default __webpack_public_path__ + \"static/media/arrow.bd77f4e7af261c4924bda0337f93f3ea.svg\";\nexport { ForwardRef as ReactComponent };","// extracted by mini-css-extract-plugin\nexport default {\"around\":\"style_around__lXLhU\",\"page\":\"style_page__1VJ2w\",\"wrapper\":\"style_wrapper__e9Xv5\",\"pulsing\":\"style_pulsing__MSaTR\",\"link\":\"style_link__qnmKD\"};","import React from \"react\";\r\nimport style from \"./style.module.scss\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport arrow from \"../../../assets/images/arrow.svg\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { clearNameFounded } from \"../../../store/actions/persons\";\r\n\r\nconst BackToCatalog = () => {\r\n  let dispatch = useDispatch();\r\n  let clearState = () => {\r\n    dispatch(clearNameFounded());\r\n  };\r\n\r\n  return (\r\n    <div className={style.wrapper} onClick={clearState}>\r\n      <NavLink className={style.link} to=\"/catalog\">\r\n        <img src={arrow} className={style.arrow} alt=\"arrow\" />\r\n        Назад в Каталог\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};\r\nexport default BackToCatalog;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"around\":\"style_around__NwSm4\",\"page\":\"style_page__6Warw\",\"loader\":\"style_loader__Rb-AE\",\"loaderImage\":\"style_loaderImage__xzY0B\"};","// extracted by mini-css-extract-plugin\nexport default {\"around\":\"style_around__NMz5S\",\"page\":\"style_page__q3iA6\",\"item\":\"style_item__zVDpO\",\"img\":\"style_img__RPh9f\",\"content\":\"style_content__SDFTL\",\"status\":\"style_status__ecGiT\",\"name\":\"style_name__5YE21\",\"date\":\"style_date__Y3Tw6\",\"nick\":\"style_nick__IzlbK\",\"quote\":\"style_quote__ggkbL\",\"determinaton\":\"style_determinaton__lLEbN\"};","import React from \"react\";\r\nimport style from \"./style.module.scss\";\r\n\r\nconst BigCard = ({ img, status, name, nick, birthday, quote }) => {\r\n  return (\r\n    <div className={style.item}>\r\n      <div className={style.img}>\r\n        <img src={img} alt=\"pearsonimg\" />\r\n      </div>\r\n      <div className={style.content}>\r\n        <span className={style.status}>{status}</span>\r\n        <div>\r\n          <p className={style.name}>{name}</p>\r\n          <p className={style.date}>\r\n            <span className={style.determinaton}>Дата рождения:</span>\r\n            {birthday}\r\n          </p>\r\n          <p className={style.nick}>\r\n            <span className={style.determinaton}>Ник-нейм:</span> {nick}\r\n          </p>\r\n          <p className={style.quote}>\r\n            <span className={style.determinaton}>Цитата</span> {quote}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BigCard;\r\n","import React from \"react\";\r\nimport style from \"./style.module.scss\";\r\nimport BigCard from \"../../molecules/BigCard\";\r\nimport loader from \"../../../assets/images/loader.gif\";\r\n\r\nconst PersonInfo = ({\r\n  birthday,\r\n  img,\r\n  status,\r\n  name,\r\n  nick,\r\n  quote,\r\n  isLoading,\r\n}) => {\r\n  return (\r\n    <div className={style.wrapper}>\r\n      {isLoading ? (\r\n        <div className={style.loader}>\r\n          <img className={style.loaderImage} src={loader} />\r\n        </div>\r\n      ) : (\r\n        <BigCard\r\n          birthday={birthday}\r\n          img={img}\r\n          status={status}\r\n          name={name}\r\n          nick={nick}\r\n          quote={quote}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PersonInfo;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  getPerson,\r\n  getQuote,\r\n  getRandomQuote,\r\n} from \"../../../store/actions/persons\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport PersonInfo from \"./component\";\r\n\r\nconst PersonInfoContainer = () => {\r\n  const { id } = useParams();\r\n  const person = useSelector((state) => state.persons.person);\r\n  let nameForQuotes = person.name;\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(getPerson(id));\r\n  }, []);\r\n  useEffect(() => {\r\n    dispatch(getQuote(nameForQuotes));\r\n  }, [person]);\r\n\r\n  useEffect(() => {\r\n    dispatch(getRandomQuote());\r\n  }, []);\r\n\r\n  let quoteFromState = useSelector((state) => state.persons.quote);\r\n  let randomQuote = useSelector((state) => state.persons.randomQuote);\r\n  let isLoading = useSelector((state) => state.persons.isLoading);\r\n\r\n  let result = quoteFromState ? quoteFromState : randomQuote;\r\n\r\n  return (\r\n    <PersonInfo\r\n      birthday={person.birthday}\r\n      img={person.img}\r\n      status={person.status}\r\n      name={person.name}\r\n      nick={person.nickname}\r\n      quote={result.quote}\r\n      isLoading={isLoading}\r\n    />\r\n  );\r\n};\r\n\r\nexport const container = PersonInfoContainer;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"around\":\"style_around__FTTze\",\"page\":\"style_page__lyNKn\",\"wrapper\":\"style_wrapper__b9Ug2\"};","import React from \"react\";\r\nimport BackToCatalog from \"../../atoms/BackToCatalog\";\r\nimport PersonInfo from \"../../organismes/PersonInfo\";\r\nimport style from \"./style.module.scss\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { clearNameFounded } from \"../../../store/actions/persons\";\r\n\r\nconst PersonPage = () => {\r\n  let dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(clearNameFounded());\r\n  }, []);\r\n\r\n  return (\r\n    <div className={style.wrapper}>\r\n      <BackToCatalog />\r\n      <PersonInfo />\r\n    </div>\r\n  );\r\n};\r\nexport default PersonPage;\r\n","import axios from \"axios\";\r\n\r\nclass Connector {\r\n  connector;\r\n  constructor() {\r\n    this.connector = axios.create({\r\n      baseURL: \"https://www.breakingbadapi.com/api/\",\r\n    });\r\n  }\r\n}\r\nexport default new Connector();\r\n","import Connector from \"../connector\";\r\n\r\nclass PersonsActions {\r\n  getPersonsFromApi = async (limit, offset) => {\r\n    const result = {\r\n      value: null,\r\n      error: null,\r\n    };\r\n    try {\r\n      const response = await Connector.connector.get(\r\n        `/characters?limit=${limit}&offset=${offset}`\r\n      );\r\n      result.value = response.data;\r\n    } catch (error) {\r\n      result.error = error;\r\n    }\r\n    return result;\r\n  };\r\n  getPersonFromApi = async (id) => {\r\n    const result = {\r\n      value: null,\r\n      error: null,\r\n    };\r\n    try {\r\n      const response = await Connector.connector.get(`/characters/${id}`);\r\n      result.value = response.data[0];\r\n    } catch (error) {\r\n      result.error = error;\r\n    }\r\n    return result;\r\n  };\r\n  getRandomQuoteFromApi = async () => {\r\n    const result = {\r\n      value: null,\r\n      error: null,\r\n    };\r\n    try {\r\n      const response = await Connector.connector.get(\"/quote/random\");\r\n      result.value = response.data[0];\r\n      console.log(result.value);\r\n    } catch (error) {\r\n      result.error = error;\r\n    }\r\n    return result;\r\n  };\r\n  getQuoteFromApi = async (nameForQuotes) => {\r\n    const result = {\r\n      value: null,\r\n      error: null,\r\n    };\r\n    try {\r\n      const response = await Connector.connector.get(\r\n        `/quote?author=${nameForQuotes}`\r\n      );\r\n      result.value = response.data[0];\r\n    } catch (error) {\r\n      result.error = error;\r\n    }\r\n    return result;\r\n  };\r\n\r\n  getPersonFromApiName = async (name) => {\r\n    const result = {\r\n      value: null,\r\n      error: null,\r\n    };\r\n    try {\r\n      const response = await Connector.connector.get(\r\n        `/characters?name=${name}`\r\n      );\r\n      result.value = response.data;\r\n    } catch (error) {\r\n      result.error = error;\r\n    }\r\n    return result;\r\n  };\r\n  getTotalPersonsFromApi = async () => {\r\n    const result = {\r\n      value: null,\r\n      error: null,\r\n    };\r\n    try {\r\n      const response = await Connector.connector.get(\"/characters\");\r\n      result.value = response.data;\r\n    } catch (error) {\r\n      result.error = error;\r\n    }\r\n    return result;\r\n  };\r\n}\r\nexport default new PersonsActions();\r\n","import connector from \"./connector\";\r\nimport PersonsActions from \"./PersonsActions\";\r\n\r\nclass Repository {\r\n  connector = connector;\r\n  PersonsActions = PersonsActions;\r\n}\r\nexport default new Repository();\r\n","import { persons } from \"../reducers/persons\";\r\nimport Repository from \"../../repository\";\r\n\r\nexport const getPersons = (limit, offset) => async (dispatch) => {\r\n  dispatch(persons.actions.setLoader(true));\r\n  try {\r\n    const { value, error } = await Repository.PersonsActions.getPersonsFromApi(\r\n      limit,\r\n      offset\r\n    );\r\n    if (error) {\r\n      console.log(\"error getting\");\r\n    } else {\r\n      dispatch(persons.actions.setPersons(value));\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n  dispatch(persons.actions.setLoader(false));\r\n};\r\nexport const getPerson = (id) => async (dispatch) => {\r\n  dispatch(persons.actions.setLoader(true));\r\n  try {\r\n    const { value, error } = await Repository.PersonsActions.getPersonFromApi(\r\n      id\r\n    );\r\n\r\n    if (error) {\r\n      console.log(\"error getting\");\r\n    } else {\r\n      dispatch(persons.actions.setPerson(value));\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n  dispatch(persons.actions.setLoader(false));\r\n};\r\nexport const getQuote = (id) => async (dispatch) => {\r\n  try {\r\n    const { value, error } = await Repository.PersonsActions.getQuoteFromApi(\r\n      id\r\n    );\r\n\r\n    if (error) {\r\n      console.log(\"error getting\");\r\n    } else {\r\n      dispatch(persons.actions.setQuote(value));\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\nexport const getRandomQuote = (random) => async (dispatch) => {\r\n  try {\r\n    const { value, error } =\r\n      await Repository.PersonsActions.getRandomQuoteFromApi(random);\r\n\r\n    if (error) {\r\n      console.log(\"error getting\");\r\n    } else {\r\n      dispatch(persons.actions.setRandomQuote(value));\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\nexport const getPersonViaName = (name) => async (dispatch) => {\r\n  dispatch(persons.actions.setLoader(true));\r\n  try {\r\n    const { value, error } =\r\n      await Repository.PersonsActions.getPersonFromApiName(name);\r\n\r\n    if (error) {\r\n      console.log(\"error getting\");\r\n    } else {\r\n      dispatch(persons.actions.setName(value));\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n  dispatch(persons.actions.setLoader(false));\r\n};\r\n\r\nexport const getAmount = (limit, offset) => async (dispatch) => {\r\n  try {\r\n    const { value, error } =\r\n      await Repository.PersonsActions.getTotalPersonsFromApi();\r\n\r\n    if (error) {\r\n      console.log(\"error getting\");\r\n    } else {\r\n      dispatch(persons.actions.setTotalAmount(value));\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\nexport const clearTest = () => (dispatch) => {\r\n  dispatch(persons.actions.clear());\r\n};\r\n\r\nexport const clearNameFounded = () => (dispatch) => {\r\n  dispatch(persons.actions.clearName());\r\n};\r\n"],"names":["dispatch","useDispatch","className","style","onClick","clearNameFounded","to","src","arrow","alt","img","status","name","nick","birthday","quote","isLoading","loader","container","id","useParams","person","useSelector","state","persons","nameForQuotes","useEffect","getPerson","getQuote","getRandomQuote","quoteFromState","randomQuote","result","nickname","BackToCatalog","Connector","this","connector","axios","baseURL","PersonsActions","getPersonsFromApi","limit","offset","value","error","response","data","getPersonFromApi","getRandomQuoteFromApi","console","log","getQuoteFromApi","getPersonFromApiName","getTotalPersonsFromApi","Repository","getPersons","random","getPersonViaName","getAmount","clearTest"],"sourceRoot":""}